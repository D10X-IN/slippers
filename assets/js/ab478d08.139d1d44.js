"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[829],{2229:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return l},default:function(){return d}});var o=n(2122),r=n(9756),i=(n(7294),n(3905)),s=["components"],a={sidebar_position:4},p="Registering components",m={unversionedId:"registering-components",id:"registering-components",isDocsHomePage:!1,title:"Registering components",description:"Components can be registered through the components.yaml file. This file should be placed at the root template directory.",source:"@site/docs/registering-components.md",sourceDirName:".",slug:"/registering-components",permalink:"/slippers/docs/registering-components",editUrl:"https://github.com/mixxorz/slippers/edit/main/docs/docs/registering-components.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/slippers/docs/getting-started"},next:{title:"Using components",permalink:"/slippers/docs/using-components"}},l=[{value:"Other ways to register components",id:"other-ways-to-register-components",children:[]},{value:"Adding components to a different register",id:"adding-components-to-a-different-register",children:[]}],c={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"registering-components"},"Registering components"),(0,i.kt)("p",null,"Components can be registered through the ",(0,i.kt)("inlineCode",{parentName:"p"},"components.yaml")," file. This file should be placed at the root template directory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="myapp/templates/components.yaml"',title:'"myapp/templates/components.yaml"'},'components:\n  card: "myapp/card.html"\n  button: "myapp/button.html"\n  icon: "myapp/icon.html"\n  icon_button: "myapp/icon_button.html"\n')),(0,i.kt)("p",null,"The key is used as the name of the component, and the value is the path to the component template."),(0,i.kt)("h2",{id:"other-ways-to-register-components"},"Other ways to register components"),(0,i.kt)("p",null,"If you have special requirements, or simply prefer an alternative way of registering components, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"register_components")," function directly."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from slippers.templatetags.slippers import register_components\n\nregister_components({\n  "card": "myapp/card.html",\n  "button": "myapp/button.html",\n})\n')),(0,i.kt)("h2",{id:"adding-components-to-a-different-register"},"Adding components to a different register"),(0,i.kt)("p",null,"By default, the above methods will register components to the ",(0,i.kt)("inlineCode",{parentName:"p"},"slippers")," tag register. This means that you need to load the ",(0,i.kt)("inlineCode",{parentName:"p"},"slippers")," template tags before being able to use the components (",(0,i.kt)("inlineCode",{parentName:"p"},"{% load slippers %}"),")."),(0,i.kt)("p",null,"There might be cases where you want to register the components to a different tag register. For instance, if you're building a reusable component library using Slippers."),(0,i.kt)("p",null,"To do this, you need to pass your own ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"register_components")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="my_library/templatetags/my_components.py"',title:'"my_library/templatetags/my_components.py"'},'from django import template\n\nregister = template.Library()\n\nregister_components({\n  "card": "my_library/card.html",\n  "button": "my_library/button.html",\n}, register)\n')),(0,i.kt)("p",null,"Now you can use the components by loading the ",(0,i.kt)("inlineCode",{parentName:"p"},"my_components")," template tags."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"{% load my_components %}\n\n{% #button %}My button{% /button %}\n")))}d.isMDXComponent=!0}}]);